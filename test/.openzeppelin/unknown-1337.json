{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe2e5421247C9aac3eee8417900138aB741b9f990",
    "txHash": "0x5dc8fd55f038d417d36cd04e9296a9a2074a92eb96abf61cfbffe7ccab7bfd0a"
  },
  "proxies": [
    {
      "address": "0x5C17F37738B9574e61a65151A68b28e81415444a",
      "txHash": "0x22276ca20c5c04902e59ea4e08fd33f87fdd00800ee744e0c7effdb9cc4fc9a6",
      "kind": "transparent"
    },
    {
      "address": "0x78fF5341514Da5ff514914B6e18DA229991719Ed",
      "txHash": "0xa848ad33a2d04db961aaa346b81ee2fa624715db91f5e33bb6732a9401c61dd0",
      "kind": "transparent"
    },
    {
      "address": "0x179Ba9c408B4B0e4F0835A357050eB619d47390E",
      "txHash": "0x1719c742dd1b145c84bcc3df04126392ebfb5031e061b6cb9a9309ea1c4c8d18",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1e25ee0702ff3de11c7b123656646d2a9052495c4acb3d0f6d708d3211e96fb9": {
      "address": "0x36D3923EFc09a4081b83EdC015E38B87994EFF9A",
      "txHash": "0x9de45b779a1cb489f6ed49ac733f11d9706970331dd70cc76ab69c7d5a25408e",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../test/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../test/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../test/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../test/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../test/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../test/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../test/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "TreeStructure",
            "label": "tree",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(TreeNode)8077_storage))",
            "src": "../test/project:/contracts/TreeStructure.sol:7"
          },
          {
            "contract": "PulsarReferral",
            "label": "maxRankId",
            "type": "t_uint256",
            "src": "../test/project:/contracts/PulsarReferral.sol:22"
          },
          {
            "contract": "PulsarReferral",
            "label": "period",
            "type": "t_uint256",
            "src": "../test/project:/contracts/PulsarReferral.sol:23"
          },
          {
            "contract": "PulsarReferral",
            "label": "multiplier",
            "type": "t_uint256",
            "src": "../test/project:/contracts/PulsarReferral.sol:24"
          },
          {
            "contract": "PulsarReferral",
            "label": "rank",
            "type": "t_mapping(t_uint256,t_struct(Rank)6925_storage)",
            "src": "../test/project:/contracts/PulsarReferral.sol:27"
          },
          {
            "contract": "PulsarReferral",
            "label": "profiles",
            "type": "t_mapping(t_address,t_struct(Profile)6932_storage)",
            "src": "../test/project:/contracts/PulsarReferral.sol:28"
          },
          {
            "contract": "PulsarReferral",
            "label": "withdrawn",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../test/project:/contracts/PulsarReferral.sol:29"
          },
          {
            "contract": "PulsarReferral",
            "label": "referralCode",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "../test/project:/contracts/PulsarReferral.sol:31"
          },
          {
            "contract": "PulsarReferral",
            "label": "referralCodeExists",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "../test/project:/contracts/PulsarReferral.sol:32"
          },
          {
            "contract": "PulsarReferral",
            "label": "referralInUse",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes32))",
            "src": "../test/project:/contracts/PulsarReferral.sol:33"
          },
          {
            "contract": "Quoter",
            "label": "BUSD",
            "type": "t_address",
            "src": "../test/project:/contracts/Quoter.sol:11"
          },
          {
            "contract": "Quoter",
            "label": "WBNB",
            "type": "t_address",
            "src": "../test/project:/contracts/Quoter.sol:12"
          },
          {
            "contract": "Quoter",
            "label": "router",
            "type": "t_address",
            "src": "../test/project:/contracts/Quoter.sol:13"
          },
          {
            "contract": "PulsarRouter",
            "label": "plans",
            "type": "t_mapping(t_uint256,t_struct(SubscriptionPlan)7533_storage)",
            "src": "../test/project:/contracts/PulsarRouter.sol:30"
          },
          {
            "contract": "PulsarRouter",
            "label": "subscriptions",
            "type": "t_mapping(t_address,t_address)",
            "src": "../test/project:/contracts/PulsarRouter.sol:31"
          },
          {
            "contract": "PulsarRouter",
            "label": "StableCoin",
            "type": "t_contract(IERC20)1998",
            "src": "../test/project:/contracts/PulsarRouter.sol:32"
          },
          {
            "contract": "PulsarRouter",
            "label": "NOVA",
            "type": "t_contract(NovaWallet)9537",
            "src": "../test/project:/contracts/PulsarRouter.sol:35"
          },
          {
            "contract": "PulsarRouter",
            "label": "pulsarReferralCoin",
            "type": "t_contract(PulsarReferralCoin)7500",
            "src": "../test/project:/contracts/PulsarRouter.sol:36"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(SubscriptionPlan)7533_storage)": {
            "label": "mapping(uint256 => struct PulsarRouter.SubscriptionPlan)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(SubscriptionPlan)7533_storage": {
            "label": "struct PulsarRouter.SubscriptionPlan",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "expirationDate",
                "type": "t_uint256"
              },
              {
                "label": "discount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)1998": {
            "label": "contract IERC20"
          },
          "t_contract(NovaWallet)9537": {
            "label": "contract NovaWallet"
          },
          "t_contract(PulsarReferralCoin)7500": {
            "label": "contract PulsarReferralCoin"
          },
          "t_mapping(t_uint256,t_struct(Rank)6925_storage)": {
            "label": "mapping(uint256 => struct PulsarReferral.Rank)"
          },
          "t_struct(Rank)6925_storage": {
            "label": "struct PulsarReferral.Rank",
            "members": [
              {
                "label": "MinPoints",
                "type": "t_uint256"
              },
              {
                "label": "Reward",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Profile)6932_storage)": {
            "label": "mapping(address => struct PulsarReferral.Profile)"
          },
          "t_struct(Profile)6932_storage": {
            "label": "struct PulsarReferral.Profile",
            "members": [
              {
                "label": "Creator",
                "type": "t_address"
              },
              {
                "label": "CodeString",
                "type": "t_string_storage"
              },
              {
                "label": "CodeHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bytes32))": {
            "label": "mapping(address => mapping(uint256 => bytes32))"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(TreeNode)8077_storage))": {
            "label": "mapping(address => mapping(uint256 => struct TreeStructure.TreeNode))"
          },
          "t_mapping(t_uint256,t_struct(TreeNode)8077_storage)": {
            "label": "mapping(uint256 => struct TreeStructure.TreeNode)"
          },
          "t_struct(TreeNode)8077_storage": {
            "label": "struct TreeStructure.TreeNode",
            "members": [
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "children",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
